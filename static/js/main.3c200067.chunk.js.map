{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","className","map","isActive","isSelectable","cn","href","onClick","title","content","App","useState","setSelectedTabId","heading","setHeading","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEtE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAMI,EAAWJ,EAAIC,KAAOH,EAAWG,GACjCI,EAAeL,EAAIC,KAAOL,EAEhC,OACE,oBACEM,UAAWI,IAAG,CAAE,YAAaF,IAC7B,UAAQ,MAFV,SAKE,mBACEG,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,WACHH,GACFR,EAAcG,IALpB,SASGA,EAAIS,SAXFT,EAAIC,WAmBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWY,cCzCPf,EAAc,CACzB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASjB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBiB,EAAtB,KACA,EAA8BD,mBAASjB,EAAK,GAAGc,OAA/C,mBAAOK,EAAP,KAAgBC,EAAhB,KAOA,OACE,sBAAKb,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,KAGtB,cAAC,EAAD,CACEnB,KAAMA,EACNC,cAAeA,EACfC,cAdoB,SAACG,GACzBa,EAAiBb,EAAIC,IACrBc,EAAWf,EAAIS,cChBnBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3c200067.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const isActive = tab.id === currentTab.id;\n            const isSelectable = tab.id !== selectedTabId;\n\n            return (\n              <li\n                className={cn({ 'is-active': isActive })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (isSelectable) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const [heading, setHeading] = useState(tabs[0].title);\n\n  const handleTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n    setHeading(tab.title);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${heading}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}